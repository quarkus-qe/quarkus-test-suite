# We use org.keycloak:keycloak-authz-client directly and not the keycloak-authorization extension
quarkus.native.additional-build-args=--initialize-at-run-time=org.keycloak.common.util.BouncyIntegration

# Security
quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/test-realm
quarkus.oidc.client-id=test-application-client
quarkus.oidc.credentials.secret=test-application-client-secret

quarkus.http.auth.basic=false
quarkus.http.auth.permission.unsecured.paths=/generate-token/*,/q/*,/token-refresh-public/*,/token-echo/*
quarkus.http.auth.permission.unsecured.policy=permit

quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated
org.eclipse.microprofile.rest.client.propagateHeaders=Authorization

# OIDC Client Configuration
quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.client-id=test-application-client
quarkus.oidc-client.credentials.secret=test-application-client-secret

## Normal User Password
quarkus.oidc-client.test-user.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.test-user.client-id=test-application-client
quarkus.oidc-client.test-user.credentials.secret=test-application-client-secret
quarkus.oidc-client.test-user.grant.type=password
quarkus.oidc-client.test-user.grant-options.password.username=test-user
quarkus.oidc-client.test-user.grant-options.password.password=test-user


## Exchange token client
quarkus.oidc-client.exchange-token.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.exchange-token.client-id=test-application-client
quarkus.oidc-client.exchange-token.credentials.secret=test-application-client-secret
quarkus.oidc-client.exchange-token.grant.type=exchange


## Token async refresh client
quarkus.oidc-client.async-token-refresh.auth-server-url=${quarkus.oidc.auth-server-url}
quarkus.oidc-client.async-token-refresh.client-id=test-application-client
quarkus.oidc-client.async-token-refresh.credentials.secret=test-application-client-secret
# Check for the token often, we will count the checks in tests
quarkus.oidc-client.async-token-refresh.refresh-interval=0.5s
# Artificially make the token last shorter time, so we can check it refresh
quarkus.oidc-client.async-token-refresh.access-token-expiry-skew=-299s


# RestClient
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.PongClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.PongClient/mp-rest/scope=jakarta.inject.Singleton

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.ReactivePongClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.ReactivePongClient/mp-rest/scope=jakarta.inject.Singleton

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.LookupAuthorizationPongClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.LookupAuthorizationPongClient/mp-rest/scope=jakarta.inject.Singleton

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.AutoAcquireTokenPongClient/mp-rest/url=http://localhost:${quarkus.http.port}

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.ping.clients.TokenPropagationPongClient/mp-rest/url=http://localhost:${quarkus.http.port}

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.principal.clients.TokenPropagationFilteredClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.principal.clients.JsonTokenClient/mp-rest/url=http://localhost:${quarkus.http.port}

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.tokens.refresh.clients.TokenRefreshFilteredRestClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.tokens.refresh.clients.TokenRefreshNamedFilteredRestClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.tokens.refresh.clients.TokenRefreshDisabledRestClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.tokens.refresh.clients.TokenRefreshEnabledRestClient/mp-rest/url=http://localhost:${quarkus.http.port}

io.quarkus.ts.security.keycloak.oidcclient.extended.restclient.tokens.clients.TokenEchoClient/mp-rest/url=http://localhost:${quarkus.http.port}

#OpenAPI
quarkus.smallrye-openapi.store-schema-directory=target/generated/jakarta-rest/

# Quarkus need set tls registry for oidc-client in addition of oidc for self-sign certs
quarkus.oidc-client.tls.tls-configuration-name=${quarkus.oidc.tls.tls-configuration-name}
quarkus.oidc-client.test-user.tls.tls-configuration-name=${quarkus.oidc.tls.tls-configuration-name}
quarkus.oidc-client.exchange-token.tls.tls-configuration-name=${quarkus.oidc.tls.tls-configuration-name}
quarkus.oidc-client.async-token-refresh.tls.tls-configuration-name=${quarkus.oidc.tls.tls-configuration-name}
