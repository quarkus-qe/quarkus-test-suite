store-pwd=password

quarkus.http.auth.permission.oidc.paths=/*/oidc
quarkus.http.auth.permission.oidc.policy=authenticated
quarkus.http.auth.permission.oidc.auth-mechanism=Bearer
quarkus.http.auth.permission.mtls.paths=/*/mtls*
quarkus.http.auth.permission.mtls.policy=authenticated
quarkus.http.auth.permission.mtls.auth-mechanism=X509
quarkus.http.auth.permission.mtls.shared=true
quarkus.http.auth.permission.mtls-roles.paths=/ping/*/roles-policy
quarkus.http.auth.permission.mtls-roles.policy=roles1
quarkus.http.auth.permission.mtls-permissions.paths=/*/*/permissions-allowed
quarkus.http.auth.permission.mtls-permissions.policy=permissions1
quarkus.http.auth.policy.roles1.roles-allowed=admin
quarkus.http.auth.policy.permissions1.permissions.user=get
quarkus.oidc.token.lifespan-grace=5
quarkus.oidc.token.principal-claim=email
quarkus.oidc.token.issuer=${quarkus.oidc.auth-server-url}
quarkus.oidc.tls.verification=certificate-validation

quarkus.oidc.tls.key-store-file=${client-ks-file}
quarkus.oidc.tls.trust-store-file=${client-ts-file}
quarkus.oidc.tls.key-store-password=${store-pwd}
quarkus.oidc.tls.trust-store-password=${store-pwd}
quarkus.oidc.tls.trust-store-file-type=${store-file-extension}

# TODO https://github.com/quarkusio/quarkus/issues/25972
# We cannot test these properties before we configure all environment to run KeyCloak with BCFIPS provider in container
#quarkus.oidc.tls.trust-store-provider=SunRsaSign,SunJCE
#quarkus.oidc.tls.key-store-provider=SunRsaSign,SunJCE

quarkus.native.additional-build-args=-H:IncludeResources=.*\\.p12||.*\\.jks||.*\\.unknown-extension,-H:IncludeResources=.*\\.txt

# mTLS setup
quarkus.http.ssl.certificate.key-store-file=${server-ks-file}
quarkus.http.ssl.certificate.key-store-password=${store-pwd}
quarkus.http.ssl.certificate.trust-store-file=${server-ts-file}
quarkus.http.ssl.certificate.trust-store-password=${store-pwd}
quarkus.http.ssl.certificate.key-store-file-type=${server-store-file-extension}
quarkus.http.ssl.certificate.trust-store-file-type=${server-store-file-extension}
quarkus.http.ssl.client-auth=request
quarkus.ssl.native=true

quarkus.http.auth.certificate-role-properties=role-mappings.txt
