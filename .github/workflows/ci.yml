name: "Pull Request CI"
on:
  - pull_request
jobs:
  detect-test-suite-modules:
    name: Detect Modules in PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - id: files
        uses: tj-actions/changed-files@v45
        continue-on-error: true
      - id: detect-changes
        run: |
          MODULES=$(find -name pom.xml | sed -e 's|pom.xml| |' | sed -e 's|./| |' | grep -v " quarkus/" | grep -v resources)
          CHANGED=""
          MODULES_ARG=""

          echo "MODULES: $MODULES"
          echo "all_changed_and_modified_files: ${{ steps.files.outputs.all_changed_and_modified_files }}"

          # If changed file have some special character, its path is surrounded with quotes which causing the if statement fail
          CHANGED_FILE=$(echo ${{ steps.files.outputs.all_changed_and_modified_files }} | sed 's/\"/\\"/')

          for module in $MODULES
          do
            if [[ $CHANGED_FILE =~ ("$module") ]] ; then
                CHANGED=$(echo $CHANGED" "$module)
            fi
          done

          # trim leading spaces so that module args don't start with comma
          CHANGED="$(echo $CHANGED | xargs)"

          MODULES_ARG="${CHANGED// /,}"
          echo "MODULES_ARG=$MODULES_ARG" >> $GITHUB_OUTPUT
    outputs:
      MODULES_ARG: ${{ steps.detect-changes.outputs.MODULES_ARG }}
  prepare-jvm-native-latest-modules-mvn-param:
    name: Prepare Maven Params For Linux JVM and native Build
    runs-on: ubuntu-latest
    needs: [ detect-test-suite-modules ]
    env:
      MODULES_ARG: ${{ needs.detect-test-suite-modules.outputs.MODULES_ARG }}
    steps:
      - id: prepare-modules-mvn-param
        run: |
          echo " ........ ${MODULES_ARG}"
          if [[ -n ${MODULES_ARG} ]]; then
            echo "Running modules: ${MODULES_ARG}"
            echo "JVM_MODULES_MAVEN_PARAM=[\" -pl ${MODULES_ARG} -Dall-modules\"]" >> $GITHUB_OUTPUT
            echo "NATIVE_MODULES_MAVEN_PARAM=[\" -pl ${MODULES_ARG} -Dall-modules\"]" >> $GITHUB_OUTPUT
          else
            echo "JVM_MODULES_MAVEN_PARAM=[' -P root-modules,cache-modules,spring-modules,http-modules,test-tooling-modules,messaging-modules,monitoring-modules', ' -P security-modules,sql-db-modules,websockets-modules,nosql-db-modules']" >> $GITHUB_OUTPUT
            echo "NATIVE_MODULES_MAVEN_PARAM=[' -P root-modules,websockets-modules,test-tooling-modules,nosql-db-modules', ' -P http-modules,cache-modules', ' -P security-modules,spring-modules',
              ' -P sql-db-modules -pl env-info,sql-db/hibernate,sql-db/sql-app,sql-db/sql-app-compatibility,sql-db/multiple-pus,sql-db/panache-flyway,sql-db/hibernate-reactive',
              ' -P sql-db-modules -pl env-info,sql-db/reactive-rest-data-panache,sql-db/vertx-sql,sql-db/reactive-vanilla,sql-db/hibernate-fulltext-search,sql-db/narayana-transactions',
              ' -P messaging-modules,monitoring-modules']" | tr -d -s '\n' ' ' >> $GITHUB_OUTPUT
          fi
    outputs:
      JVM_MODULES_MAVEN_PARAM: ${{ steps.prepare-modules-mvn-param.outputs.JVM_MODULES_MAVEN_PARAM }}
      NATIVE_MODULES_MAVEN_PARAM: ${{ steps.prepare-modules-mvn-param.outputs.NATIVE_MODULES_MAVEN_PARAM }}
  linux-build-jvm-latest:
    name: PR - Linux - JVM build - Latest Version
    runs-on: ubuntu-latest
    timeout-minutes: 240
    needs: prepare-jvm-native-latest-modules-mvn-param
    strategy:
      matrix:
        java: [ 17 ]
        module-jvm-args: ${{ fromJSON(needs.prepare-jvm-native-latest-modules-mvn-param.outputs.JVM_MODULES_MAVEN_PARAM) }}
        module-native-args: ${{ fromJSON(needs.prepare-jvm-native-latest-modules-mvn-param.outputs.NATIVE_MODULES_MAVEN_PARAM) }}
    steps:
      - name: ECHO
        run: |
          echo "JVM: ${{ matrix.module-jvm-args }}"
          echo "Native: ${{ matrix.native-jvm-args }}"

