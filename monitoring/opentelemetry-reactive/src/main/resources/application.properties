io.quarkus.ts.opentelemetry.reactive.PingPongService/mp-rest/url=${pongservice_url}:${pongservice_port}
io.quarkus.ts.opentelemetry.reactive.PingPongService/mp-rest/scope=jakarta.inject.Singleton

io.quarkus.ts.opentelemetry.reactive.sse.ServerSentEventsPongClient/mp-rest/url=http://localhost:${quarkus.http.port}
io.quarkus.ts.opentelemetry.reactive.sse.ServerSentEventsPongClient/mp-rest/scope=jakarta.inject.Singleton

# gRPC
quarkus.grpc.clients.pong.host=localhost
quarkus.grpc.clients.pong.port=${quarkus.http.port}
quarkus.grpc.server.use-separate-server=false

quarkus.application.name=pingpong

# basic authentication
quarkus.http.auth.basic=true
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
quarkus.security.users.embedded.users.alice=alice
quarkus.security.users.embedded.roles.alice=admin

# Export security events
quarkus.otel.security-events.enabled=true
