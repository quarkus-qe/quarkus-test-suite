# default connection provider
jdbc-url=must-be-replaced-during-runtime
quarkus.hibernate-orm.database.start-offline=true
quarkus.hibernate-orm.multitenant=SCHEMA
quarkus.hibernate-orm.datasource=app_scope_credentials
quarkus.hibernate-orm.packages=io.quarkus.ts.hibernate.startup.offline.pu.defaults.orm
quarkus.datasource.app_scope_credentials.credentials-provider=app_scope_credentials
quarkus.datasource.app_scope_credentials.jdbc.url=${jdbc-url}
quarkus.datasource.app_scope_credentials.db-kind=${quarkus.datasource.db-kind}
quarkus.datasource.app_scope_credentials.reactive=false
quarkus.datasource.req_scope_credentials.credentials-provider=req_scope_credentials
quarkus.datasource.req_scope_credentials.jdbc.url=${jdbc-url}
quarkus.datasource.req_scope_credentials.db-kind=${quarkus.datasource.db-kind}
quarkus.datasource.req_scope_credentials.reactive=false
## ensure each request use a new connection so that we test resolving credentials work
quarkus.datasource.app_scope_credentials.jdbc.pooling-enabled=false
quarkus.datasource.req_scope_credentials.jdbc.pooling-enabled=false
# own connection provider
quarkus.hibernate-orm.own_connection_provider.database.start-offline=true
quarkus.hibernate-orm.own_connection_provider.multitenant=${quarkus.hibernate-orm.multitenant}
quarkus.hibernate-orm.own_connection_provider.datasource=own_connection_provider
quarkus.hibernate-orm.own_connection_provider.packages=io.quarkus.ts.hibernate.startup.offline.pu.ownconnection.orm
quarkus.datasource.own_connection_provider.jdbc.url=${jdbc-url}
quarkus.datasource.own_connection_provider.db-kind=${quarkus.datasource.db-kind}
quarkus.datasource.own_connection_provider.reactive=false
## ensure each request use a new connection so that we test resolving credentials work
quarkus.datasource.own_connection_provider.jdbc.pooling-enabled=false

# must be here as the MariaDB JDBC driver is a forced dependency so the FW doesn't recognize this is a build-time property
quarkus.hibernate-orm.dialect.mariadb.bytes-per-character=3
